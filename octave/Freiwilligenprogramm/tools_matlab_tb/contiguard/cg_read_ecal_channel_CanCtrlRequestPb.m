function e = cg_read_ecal_channel_CanCtrlRequestPb(d,channel_name)

  ii = str_find_f(channel_name,'Pb');
  if( ii > 0 )
    name_channel = channel_name(1:max(1,ii-1));
  else
    name_channel = channel_name;
  end
 
  sigliste     = {{'long_cntrl_mode'       , 1,'enum'  ,'int'     ,0,'0:LODMC_CRUISING, 1:LODMC_PARKING'} ...
                 ,{'secure_req'            , 1,'num'   ,'int'     ,0,'secure request 0/1'} ...
                 ,{'hold_req'              , 1,'num'   ,'int'     ,0,''} ...
                 ,{'emergency_hold_req'    , 1,'num'   ,'int'     ,0,''} ...
                 ,{'long_cntrl_active'     , 1,'num'   ,'int'     ,0,''} ...
                 ,{'traj_delta_x'          , 1,'m'     ,'double'  ,1,'longitudinal deviation'} ...
                 ,{'traj_req_acc'          , 1,'m/s/s' ,'double'  ,1,'longitudinal reference accel'} ...
                 ,{'traj_req_vel'          , 1,'m/s'  ,'double'  ,1,'longitudinal reference velocity'} ...
                 ,{'traj_dist_to_stop'     , 1,'m'     ,'double'  ,1,'longitudinal distance to last point'} ...
                 ,{'gear_req'              , 1,'enum'  ,'int'     ,0,'0:MANUAL, 1:D, 2:R, 3:N, 4:P'} ...
                 ,{'traj_is_on_last_track' , 1,'num'   ,'int'     ,0,''} ...
                 ,{'ramp_req'              , 1,'enum'  ,'int'     ,0,'0:NO_RAMP, 1:RAMP_IN_SLOW, 2:RAMP_IN_MEDIUM, 3:RAMP_IN_FAST, 4:RAMP_OUT_SLOW, 5:RAMP_OUT_MEDIUM, 6:RAMP_OUT_FAST'} ...
                 ,{'lat_cntrl_mode'        , 1,'enum'  ,'int'     ,0,'0:LAKMC_CRUISING, 1:LAKMC_PARKING'} ...
                 ,{'lat_cntrl_active'      , 1,'num'   ,'int'     ,0,''} ...
                 ,{'lat_cntrl_drive_dir'      , 1,'num'   ,'int'     ,0,'drive dir 0: forward driving, 1: backward driving'} ...                 
                 ,{'traj_replanned'        , 1,'num'   ,'int'     ,0,''} ...
                 ,{'traj_ref_pos'          , 1,'enum'  ,'int'     ,0,'0:FA, 1:RA, 2:COG'} ...                 
                 ,{'traj_delta_psi'        , 1,'rad'   ,'double'  ,1,''} ...
                 ,{'traj_delta_y'          , 1,'m'     ,'double'  ,1,''} ...
                 ,{'traj_kappa'            , 1,'1/m'   ,'double'  ,1,''} ...
                 ,{'traj_d2xds2'           , 1,'-'     ,'double'  ,1,''} ...
                 ,{'traj_d2yds2'           , 1,'-'     ,'double'  ,1,''} ...
                 ,{'traj_dxds'             , 1,'-'     ,'double'  ,1,''} ...
                 ,{'traj_dyds'             , 1,'-'     ,'double'  ,1,''} ...
                 ,{'traj_delta_x_w_coord'  , 1,'m'     ,'double'  ,1,'Longitudinal x deviation in world coordinates'} ...
                 ,{'traj_delta_y_w_coord'  , 1,'m'     ,'double'  ,1,'Longitudinal y deviation in world coordinates'} ...
                 ,{'veh_ego_yaw'           , 1,'rad'   ,'double'  ,1,'Ego vehicle yaw angle'} ...
                 };                 
                 
%   optional  pb.Header        header                  =  1;           /// common message header
%   optional  uint32           process_time_ms         =  2;           /// process time in [ms]
%   optional  uint32           loop_time_ms            =  3;           /// loop time in [ms]
%   repeated  double           xPathRecordRAvec        =  4;           /// [m]  xpoints of original path
%   repeated  double           yPathRecordRAvec        =  5;           /// [m]  ypoints of original path
%   repeated  double           xPathCorrrectRAvec      =  6;           /// [m]  xpoints of corrected path
%   repeated  double           yPathCorrrectRAvec      =  7;           /// [m]  ypoints of corrected path
%   optional  double           xDevErrAct              = 8;            /// [m]  x deviation Error actual
%   optional  double           yDevErrAct              = 9;            /// [m]  y deviation Error actual
%   optional  double           yawDevErrAct            = 10;          /// [rad]  yaw deviation Error actual
%   optional  double           xDevErrLast              = 11;            /// [m]  x deviation Error last
%   optional  double           yDevErrLast              = 12;            /// [m]  y deviation Error last
%   optional  double           yawDevErrLast            = 13;          /// [rad]  yaw deviation Error last

  e    = struct([]);
  
  
  
%   ndata = length(d.data);
%    
%   timestamp = zeros(ndata,1);
%   for j=1:ndata
%     timestamp(j) = d.data{j}.header.timestamp;
%   end
%   if( isfield(d,'timestamps') )
%     time = double(d.timestamps)*1.0e-6;
%   else
%     time = double(timestamp)*1.0e-6;
%   end
%   
%   e = e_data_add_value(e,[name_channel,'_timestamp'],'us','time stamp',time,timestamp,0);
  
  [e,time] = cg_read_ecal_channel_read_timestamp(e,d,name_channel);
  e = cg_read_ecal_channel_read_signals(e,name_channel,time,d,sigliste);

%   for i=1:length(sigliste)
%     ee = cg_read_ecal_channel_signal(sigliste{i},d.data,time,name_channel);
%     e  = merge_struct_f(e,ee);
%   end
  
  e = e_data_rename_signal(e,[name_channel,'_header_timestamp'],[name_channel,'_timestamp']);
  
end