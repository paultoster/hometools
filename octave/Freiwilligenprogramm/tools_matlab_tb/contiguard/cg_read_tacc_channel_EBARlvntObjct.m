function eout = cg_read_tacc_channel_EBARlvntObjct(e)

  eout = [];
  c_names = fieldnames(e);
  n       = length(c_names);
% Channels zuordnen
signals = {'EBARlvntObjct_valid' ...
          ,'EBARlvntObjct_timestamp' ...
          ,'EBARlvntObjct_id' ...
          ,'EBARlvntObjct_state' ...
          ,'EBARlvntObjct_x' ...
          ,'EBARlvntObjct_y' ...
          ,'EBARlvntObjct_vxRel' ...
          ,'EBARlvntObjct_vyRel' ...
          ,'EBARlvntObjct_minStopDist' ...
          ,'EBARlvntObjct_delay' ...
          ,'EBARlvntObjct_width' ...
          ,'EBARlvntObjct_dynamic' ...
          ,'EBARlvntObjct_type' ...
          ,'EBARlvntObjct_height' ...
          };
usignals = {'-' ...
          ,'us' ...
          ,'-' ...
          ,'-' ...
          ,'m' ...
          ,'m' ...
          ,'m/s' ...
          ,'m/s' ...
          ,'m' ...
          ,'s' ...
          ,'m' ...
          ,'-' ...
          ,'-' ...
          ,'-' ...
          };
csignals = {'' ...
          ,'' ...
          ,'Identification number of the environment perception object element' ...
          ,'0: Request did not win arbitration, 128: Request won arbitration and is currently active' ...
          ,'' ...
          ,'' ...
          ,'' ...
          ,'' ...
          ,'' ...
          ,'' ...
          ,'' ...
          ,'0: undef, 1: moving , 2: standing' ...
          ,'0: undef, 1: car, 2: truck, 3: motorbike, 4: bike, 5: pedestrian' ...
          ,'' ...          
          };
lsignals = [0 ...
          ,0 ...
          ,0 ...
          ,0 ...
          ,0 ...
          ,0 ...
          ,0 ...
          ,0 ...
          ,0 ...
          ,0 ...
          ,0 ...
          ,0 ...
          ,0 ...
          ,0 ...          
          ];
  

  for i=1:n
    signal_found = 0;   
  
    for j = 1:length(signals)
      if( strcmp(c_names{i},signals{j}) )
        signal_found = 1;  % Name aus c_names in signals gefunden
        [tin,vin] = elim_nicht_monoton(e.(c_names{i}).time,e.(c_names{i}).vec);
        eout.(signals{j}).time = tin;
        eout.(signals{j}).vec  = vin;
        eout.(signals{j}).unit = usignals{j};
        eout.(signals{j}).comment = csignals{j};
        eout.(signals{j}).lin     = lsignals(j); 
      end 
    end
    
    if (signal_found == 0)  % Name aus c_names wurde nicht in signals gefunden
      [tin,vin] = elim_nicht_monoton(e.(c_names{i}).time,e.(c_names{i}).vec);

      eout.(c_names{i}).time = tin;
      eout.(c_names{i}).vec  = vin;
      eout.(c_names{i}).unit = '?';
      eout.(c_names{i}).comment = '?';
      eout.(c_names{i}).lin     = '?'; 
    end
  end
end



